{
  "VulcanCodecRecord": {
    "prefix": ["vulcanRecord"],
    "body": [
      "implicit val codec: Codec[${1:Foo}] = Codec.record(",
      "\tname = \"${1:Foo}\",",
      "\tnamespace = \"\",",
      "\tdoc = \"\".some",
      ") { field =>",
      "\t(",
      "\t\tfield[](\"\", _.),",
      "\t\tfield[](\"\", _.),",
      "\t).mapN(${1:Foo}.apply)",
      "}"
    ],
    "description": "Vulcan codec for a record type"
  },
  "ForComprehension": {
    "prefix": ["for", "yield"],
    "body": [
      "for {",
      "\t${1:_} <- ()",
      "} yield ()"
    ],
    "description": "for comprehension"
  }
}
